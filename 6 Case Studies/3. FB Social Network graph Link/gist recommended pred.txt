gist recommended pred

Look Files in follow order

1. FB_EDA
2. FB_featurization
3. FB_Models

-> Pre-Featuriezed Data is stored in HDF file format (Hierarchical Data Format)

EDA :- helps to analyze the stats & also to create negative samples for out classif task
       Negative samples = mising link between 2 users
       Positive samples = present link between 2 users

Featurization :-
 -> Helps to create vector repr for each sample
    because with just samples we cant do ML,
    We need some dimensions or vector representation of our sample (ie Pair of User)


--------

NOTE :-
We are given some computed files already
We are given some preprocessed & EDA attempted files already

We create DiGraph based on Train Data but
Test Data may containes some new Persons which may not be seen in Train Data (Graph)
  \
   So for such new people we dont have clue regarding their social connections

REMEMBER
( Pre-Featuriezed Data is stored in HDF file format (Hierarchical Data Format) )


intermediate files (temporary files) jupyter NB :- EDA-Basic Stats

Very Imp Featurization in Graph Data is Page Rank

-------

* Jaccard Dist helps to know the similarity between sets

* Page Rank helps to know relative importance of a node in a Graph

-------

CRUX :- Featurization for Graph Data

* Pure Graph based Edge/Link Predictinon

* 1 Snapshot of data at time t

Key Task :- To come up with Graph based Features to solve binary classification problem

The Big challange is : Featurization Technique !!

* Task :- Binary Classification Task 
            \
             Edges present - 1
             Not Present   - 0

=> Data provides possess only info abt edges present i.e all labels 1
   So we need to create data pts for label 0 to make Balanced Dataset


* Cold Start Problem :
  --------
   - There are some data (vertices ) in Test data for which I've no information regards in Train data
     at all

* Pre-computation : (Preparing the Dataset)
  -------
   Constructing Y_i's (predicted variable)
   
   1) Data Points for Label 0 (missing edges)
   2) Balanced Dataset (achieved via above point)


* Temporal Nature : (Real World)
  ---------
   - data is changing/evolving over time
   - but here given only 1 snapshot so We cannot use Temporal SPlitting

* Featurization :
  ---------
   -> Most Imp part in case of Graph-based ML

   * set based doings :
       1) Jaccard distance
       2) Otsuka OChiai Coefficient

   * Rank Mesaures
       3) Page Rank  
            \ 
             -> Help us to find most popular (ie Celebrity)
    
   4) shortest Distance & Weakly Connected Components (Community)

       (=> Thus Shortest Path & Weakly Connected Component helps to spot out the Community of Users)
        - detecting Communities & if given 2 users both belong to same community or not

   5) Adar Index : (For Directed Graph)

       => common elements with a large neighbourhoods are lesser significant when predicting connection between 2 nodes

       - Eg}  fan base of Celebrity (Salman Khan) vs School Friends

       [GIST]
        -> Adar Index include Neighborhood for deducing the value
        -> Adar Index intutively works on focussing on mutual connection study for 2 Users
           (Mututal Friend Concept)

   6) Follows Back


* SVD :
  ---
  For any item, we have
  1) k-dimen from Left Singular Matrix  (ROW_i)
  2) k-dimen from right Sinular Matrix as well (COL_i)

  hence we have double info (ie 2 k-dimen vec)

  This gives us 2 representation of single entity
